<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-24T02:16:04 IST" name="HeroKuAPp" finished-at="2024-08-24T02:17:21 IST" duration-ms="76501">
    <groups>
      <group name="First Set">
        <method signature="HerokuAppSetTest1.addandRemoveElements()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" name="addandRemoveElements" class="org.herokuapp.com.tests.HerokuAppSetTest1"/>
        <method signature="HerokuAppSetTest1.basicAuthTest()[pri:1, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" name="basicAuthTest" class="org.herokuapp.com.tests.HerokuAppSetTest1"/>
        <method signature="HerokuAppSetTest1.brokenImagesTest()[pri:2, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" name="brokenImagesTest" class="org.herokuapp.com.tests.HerokuAppSetTest1"/>
        <method signature="HerokuAppSetTest1.challengingDomTest()[pri:3, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" name="challengingDomTest" class="org.herokuapp.com.tests.HerokuAppSetTest1"/>
        <method signature="HerokuAppSetTest1.checkBoxTest()[pri:4, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" name="checkBoxTest" class="org.herokuapp.com.tests.HerokuAppSetTest1"/>
      </group> <!-- First Set -->
    </groups>
    <test started-at="2024-08-24T02:16:04 IST" name="Chrome FunctionalTest" finished-at="2024-08-24T02:17:20 IST" duration-ms="76309">
      <class name="org.herokuapp.com.tests.HerokuAppSetTest1">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:16:04 IST" name="beforeTest" finished-at="2024-08-24T02:16:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="setup()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:16:04 IST" name="setup" finished-at="2024-08-24T02:16:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.String)[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:16:04 IST" name="beforeMethod" finished-at="2024-08-24T02:16:13 IST" duration-ms="8950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://the-internet.herokuapp.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addandRemoveElements()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:16:13 IST" name="addandRemoveElements" description="To Automate Add/Remove Elements" finished-at="2024-08-24T02:16:14 IST" duration-ms="1056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addandRemoveElements -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:16:14 IST" name="afterMethod" finished-at="2024-08-24T02:16:15 IST" duration-ms="1028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.String)[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:16:15 IST" name="beforeMethod" finished-at="2024-08-24T02:16:20 IST" duration-ms="4553" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://the-internet.herokuapp.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="basicAuthTest()[pri:1, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:16:20 IST" name="basicAuthTest" description="To Automate Basic Auth" finished-at="2024-08-24T02:16:20 IST" duration-ms="453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicAuthTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:16:20 IST" name="afterMethod" finished-at="2024-08-24T02:16:21 IST" duration-ms="542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.String)[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:16:21 IST" name="beforeMethod" finished-at="2024-08-24T02:16:25 IST" duration-ms="4338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://the-internet.herokuapp.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="brokenImagesTest()[pri:2, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:16:25 IST" name="brokenImagesTest" description="To Automate Broken Image" finished-at="2024-08-24T02:16:37 IST" duration-ms="11396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- brokenImagesTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:16:37 IST" name="afterMethod" finished-at="2024-08-24T02:16:38 IST" duration-ms="1015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.String)[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:16:38 IST" name="beforeMethod" finished-at="2024-08-24T02:16:42 IST" duration-ms="4259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://the-internet.herokuapp.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="challengingDomTest()[pri:3, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:16:42 IST" name="challengingDomTest" description="To Automate Add/Remove Elements" finished-at="2024-08-24T02:17:14 IST" duration-ms="32177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- challengingDomTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:17:14 IST" name="afterMethod" finished-at="2024-08-24T02:17:15 IST" duration-ms="1024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String,java.lang.String)[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:17:15 IST" name="beforeMethod" finished-at="2024-08-24T02:17:19 IST" duration-ms="4293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://the-internet.herokuapp.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="checkBoxTest()[pri:4, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:17:19 IST" name="checkBoxTest" description="To Automate Check Box" finished-at="2024-08-24T02:17:20 IST" duration-ms="520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:17:20 IST" name="afterMethod" finished-at="2024-08-24T02:17:20 IST" duration-ms="556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:17:20 IST" name="afterTest" finished-at="2024-08-24T02:17:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="wrapUp()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@2f953efd]" started-at="2024-08-24T02:17:20 IST" name="wrapUp" finished-at="2024-08-24T02:17:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrapUp -->
      </class> <!-- org.herokuapp.com.tests.HerokuAppSetTest1 -->
    </test> <!-- Chrome FunctionalTest -->
    <test started-at="2024-08-24T02:17:21 IST" name="Firefox FunctionalTest" finished-at="2024-08-24T02:17:21 IST" duration-ms="7">
      <class name="org.herokuapp.com.tests.HerokuAppSetTest1">
        <test-method is-config="true" signature="globalSetup()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@68746f22]" started-at="2024-08-24T02:16:04 IST" name="globalSetup" finished-at="2024-08-24T02:16:04 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetup -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@68746f22]" started-at="2024-08-24T02:17:21 IST" name="afterTest" finished-at="2024-08-24T02:17:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@68746f22]" started-at="2024-08-24T02:17:21 IST" name="beforeTest" finished-at="2024-08-24T02:17:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="wrapAllUp()[pri:0, instance:org.herokuapp.com.tests.HerokuAppSetTest1@68746f22]" started-at="2024-08-24T02:17:21 IST" name="wrapAllUp" finished-at="2024-08-24T02:17:30 IST" duration-ms="9819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrapAllUp -->
      </class> <!-- org.herokuapp.com.tests.HerokuAppSetTest1 -->
    </test> <!-- Firefox FunctionalTest -->
  </suite> <!-- HeroKuAPp -->
</testng-results>
